group 'mncm-shop'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'com.google.cloud.tools.appengine'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    jcenter()
}

buildscript {
    repositories{
        mavenCentral()
        mavenLocal()
        jcenter()
    }
    dependencies {
        classpath 'com.google.cloud.tools:appengine-gradle-plugin:1.3.1'

    }

}

dependencies
        {

            //RestEasy
            compile group: 'org.jboss.resteasy', name: 'resteasy-multipart-provider', version: '3.0.19.Final'
            compile group: 'org.jboss.resteasy', name: 'resteasy-jaxrs',version: '3.0.19.Final'
            compile group: 'org.jboss.resteasy', name: 'resteasy-jackson2-provider',version: '3.0.19.Final'

            //Servlet
            compile group: 'javax.servlet', name: 'javax.servlet-api', version: '3.0.1'

            //Jackson
            compile group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.6.2'
            compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.6.2'
            compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.6.2'

            compile group: 'org.codehaus.jackson', name: 'jackson-core-asl', version: '1.9.3'
            compile group: 'org.codehaus.jackson', name: 'jackson-mapper-asl', version: '1.9.3'

            //Utilities
            compile group: 'commons-collections', name: 'commons-collections', version: '3.2'
            compile group: 'commons-lang', name: 'commons-lang', version: '2.6'
            compile group: 'commons-codec', name: 'commons-codec', version: '1.7'
            compile group: 'commons-logging', name: 'commons-logging', version: '1.2'

            //Velocity
            compile group: 'org.apache.velocity', name: 'velocity', version: '1.7'

            //Lombok
            compileOnly group: 'org.projectlombok', name: 'lombok', version: '1.16.18'

            //Testing
            testCompile  "junit:junit:4.4"
            testCompile group: 'com.google.appengine', name: 'appengine-testing', version: '1.9.59'
            testCompile group: 'com.google.appengine', name: 'appengine-api-stubs', version: '1.9.59'
            compile group: 'com.google.appengine', name: 'appengine-api-labs', version: '1.9.59'

            //AppEngine
            compile group: 'com.google.appengine', name: 'appengine-api-1.0-sdk', version: '1.9.59'

            //Objectify
            compile group: 'com.googlecode.objectify', name: 'objectify', version: '5.1.15'

            //custom jar
            compile fileTree(dir:'libs', include: '*.jar')

            compile group: 'org.bitbucket.b_c', name: 'jose4j', version: '0.6.0'


        }
appengine.run.port = 8889

//task copyRobotsFile(type : Copy) {
//    delete file("${buildDir}/staged-app/robots.txt")
//
//    from "${projectDir}/src/main/resources/${env}/robots.txt"
//    into file("${buildDir}/staged-app")
//
////    onlyIf{
////        env == "prod"
////    }
//
//    doLast {
////        if(env == "prod")
//        println 'copying robots.txt file to staged-app'
//    }
//}
//
//
task getEnvironment {
    def env = project.hasProperty("env") ? project.property("env") : "dev"
}

appengineDeploy.dependsOn(build , getEnvironment)

appengine {
    deploy {
        stopPreviousVersion = false  // - stop the current version (if it's true)
        promote = false // - and make this as the current version (if it's true)
        version = '1'
        project = 'mncmshop'
    }
}
